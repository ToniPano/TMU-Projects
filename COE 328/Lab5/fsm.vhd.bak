library ieee;
use ieee.std_logic_1164.all;

entity fsm is
	port
	(
		clk	  : in std_logic;
		data_in : in std_logic;
		reset   : in std_logic;
		student_id  : out std_logic_vector( 3 downto 0);
		current_state : out std_logic_vector(3 downto 0);
	);
	end entity;
	
	architecture machine of fsm is
		type state_type is (s0,s1,s2,s3,s4,s5,s6,s7,s8);
		signal ysfm : state_type;
	begin	
		process(clk,reset)
		begin
			if reset = '1' then
			yfsm<=s0;
			elseif(clk'EVENT AND clk ='1') then
				
				case yfsm is
				
					when s0=> yfsm <= s2;
					
					when s1=> yfsm <= s3;
					
					when s2=> yfsm <= s4;
					
					when s3=> yfsm <= s8;
					
					when s4=> yfsm <= s1;
					
					when s5=> yfsm <= s7;
					
					when s6=> yfsm <= s5;
					
					when s7=> yfsm <= s0;
					
					when s8=> yfsm <= s6;
					
					end case;
				end if;
			end process;
			
			process(yfsm, data_in)
			begin	
				case yfsm is
					when s0=> student_id <= "0101";
					
					when s2=> student_id <= "0000";
					
					when s4=> student_id <= "0000";
					
					when s1=> student_id <= "1000";
					
					when s3=> student_id <= "0001";
					
					when s8=> student_id <= "0001";
					
					when s6=> student_id <= "0110";
					
					when s5=> student_id <= "0110";
					
					when s7=> student_id <= "0011";
					
				end case;
				case yfsm is
				
				when s0=> current_state <= "0000";
				
				when s1=> current_state <= "0001";
				
				when s2=> current_state <= "0010";
				
				when s3=> current_state <= "0011";
				
				when s4=> current_state <= "0100";
				
				when s5=> current_state <= "0101";
				
				when s6=> current_state <= "0110";
				
				when s7=> current_state <= "0111";
				
				when s8=> current_state <= "1000";
				
				end case;
			end process;
			
			end machine;
					